version: "3.7"

services:
  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']

  nest:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - AWS_REGION=eu-west-1
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=AWS_SECRET_ACCESS_KEY
      - AWS_SQS_QUEUE_URL=http://localhost:4566/000000000000/example
      - DATABASE_LOGGING=true
      - DATABASE_HOST=database
      - DATABASE_PORT=3306
      - DATABASE_NAME=nest
      - DATABASE_USER=root
      - DATABASE_PASSWORD=test
      - DATABASE_SYNC=true
      - EMAIL=no-reply@example.com
      - PORT=5000
      - OTEL_SERVICE_NAME=nest
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - LOG_FILE_NAME=/app/logs/nest.log
    volumes:
      - ./src:/app/src:ro
      - ./libs:/app/libs:ro
      - ./data/logs:/app/logs
    depends_on:
      - otel-collector
      - database

  database:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=nest
      - MYSQL_ROOT_PASSWORD=test
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    cap_add:
      - SYS_NICE
    volumes:
      - ./database/nest:/var/lib/mysql

  localstack:
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=ses,sqs,sns
      - AWS_DEFAULT_REGION=ap-northeast-2
    volumes:
      - ./.aws:/docker-entrypoint-initaws.d:ro

# OTEL setup ----->
  tempo:
    image: grafana/tempo:1.5.0
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    ports:
      - "14268"      # jaeger ingest, Jaeger - Thrift HTTP
      - "14250"      # Jaeger - GRPC
      - "55680"      # OpenTelemetry
      - "3100"       # tempo
      - "6831/udp"   # Jaeger - Thrift Compact
      - "6832/udp"   # Jaeger - Thrift Binary
  loki:
    image: grafana/loki:2.7.0
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - "3101:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml
      - ./data/loki-data:/tmp/loki
  promtail:
    image: grafana/promtail:2.7.0
    command: -config.file=/etc/promtail/promtail-local.yaml
    volumes:
      - ./etc/promtail-local.yaml:/etc/promtail/promtail-local.yaml
      - ./data/logs:/app/logs
    depends_on:
      - nest
      - loki
  volume_exporter:
    image: mnadeem/volume_exporter
    command: ["--volume-dir=tempo:/tmp/tempo", "--volume-dir=logs:/app/logs", "--volume-dir=loki:/tmp/loki"]
    volumes:
      - ./data/logs:/app/logs
      - ./data/tempo-data:/tmp/tempo
      - ./data/loki-data:/tmp/loki
    ports:
      - 9889:9888
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.3.2-ubuntu
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
      - volume_exporter

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./etc/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - tempo
      - prometheus
